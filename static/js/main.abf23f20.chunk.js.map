{"version":3,"sources":["core.tsx","services/i18n.ts","components/loader/index.tsx","components/site-loader/index.tsx","reportWebVitals.ts","index.tsx","core/index.ts"],"names":["Array","prototype","shuffle","j","temp","i","this","length","Math","floor","random","i18n","on","lng","localStorage","setItem","use","i18nBackendFetch","browserLanguageDetector","initI18n","init","debug","process","fallbackLng","whitelist","interpolation","escapeValue","ns","backend","loadPath","concat","addPath","detection","order","lookupLocalStorage","checkWhitelist","saveMissing","saveMissingTo","_jsxs","className","children","_jsx","props","component","setComponent","useState","loaderHidden","setLoaderHidden","useEffect","setTimeout","load","then","_ref","default","_default","_Fragment","Loader","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","Suspense","fallback","I18nProvider","SiteLoader","document","getElementById"],"mappings":"2JACAA,MAAMC,UAAUC,QAAU,WACxB,IACEC,EACAC,EAFEC,EAAIC,KAAKC,OAGb,GAAS,GAALF,EAAQ,OAAOC,KACnB,OAASD,GACPF,EAAIK,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCD,EAAOE,KAAKD,GACZC,KAAKD,GAAKC,KAAKH,GACfG,KAAKH,GAAKC,EAEZ,OAAOE,IACT,C,sFCNAK,IAAKC,GAAG,mBAAoBC,IAC1BC,aAAaC,QAAQ,MAAOF,EAAI,IAGjCF,IAEEK,IAAIC,KACJD,IAAIE,KACJF,IAAIG,KACJC,KAAK,CACJC,OAAOC,EACPC,YAAa,KACbC,UAAW,CAAC,KAAM,MAClBC,cAAe,CACbC,aAAa,GAEfC,GAAI,CAAC,eACLC,QAAS,CACPC,SAAS,GAADC,OAAKR,GAAsB,gCACnCS,QAAQ,GAADD,OAAKR,GAAsB,gCAEpCU,UAAW,CACTC,MAAO,CAAC,gBACRC,mBAAoB,MACpBC,gBAAgB,GAElBC,aAAa,EACbC,cAAe,QAGJ1B,QAAI,E,gBCnCJ,MAEX2B,eAAA,OAAKC,UAAU,aAAYC,SAAA,CACzBC,cAAA,UACAA,cAAA,aCFUC,G,OAAAA,IAKd,MAAOC,EAAWC,GAAgBC,mBAAS,OACpCC,EAAcC,GAAmBF,oBAAS,GASjD,OARAG,qBAAU,KACJL,GAAWM,YAAW,IAAMF,GAAgB,IAAO,IAAK,GAC3D,CAACJ,IACJK,qBAAU,KACRN,EACGQ,OACAC,MAAKC,IAAA,IAAGC,QAASC,GAAUF,EAAA,OAAKR,EAAaU,IAAkB,GAAC,GAClE,IAEDhB,eAAAiB,WAAA,CAAAf,SAAA,EACIM,GACAL,cAAA,OAAKF,UAAS,eAAAT,OAAiBa,EAAY,OAAS,IAAKH,SACvDC,cAACe,EAAM,MAGVb,IAGN,GCdcc,MAZUC,IACnBA,GAAeA,aAAuBC,UACxC,8BAAqBR,MAAKC,IAAkD,IAAjD,OAAEQ,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASZ,EACpEQ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,EAAY,GAExB,E,OCJFO,IAASC,OACPzB,cAAC0B,IAAMC,WAAU,CAAA5B,SACfC,cAAC4B,WAAQ,CAACC,SAAS,UAAS9B,SAC1BC,cAAC8B,IAAY,CAAC5D,KAAMA,EAAK6B,SACvBC,cAAC+B,EAAU,CAACtB,KAAMA,IAAM,4DAI9BuB,SAASC,eAAe,SAM1BjB,G,iCCtBA,kW","file":"static/js/main.abf23f20.chunk.js","sourcesContent":["//@ts-ignore\nArray.prototype.shuffle = function () {\n  var i = this.length,\n    j,\n    temp;\n  if (i == 0) return this;\n  while (--i) {\n    j = Math.floor(Math.random() * (i + 1));\n    temp = this[i];\n    this[i] = this[j];\n    this[j] = temp;\n  }\n  return this;\n};\n","import {\n  initI18n,\n  i18n,\n  browserLanguageDetector,\n  i18nBackendFetch,\n} from \"@core\";\n\ni18n.on(\"languageChanged\", (lng: string) => {\n  localStorage.setItem(\"lng\", lng);\n});\n/* eslint-disable */\n(i18n as any)\n  /* eslint-enable */\n  .use(i18nBackendFetch)\n  .use(browserLanguageDetector)\n  .use(initI18n)\n  .init({\n    debug: process.env.NODE_ENV !== \"production\",\n    fallbackLng: \"en\",\n    whitelist: [\"en\", \"ar\"],\n    interpolation: {\n      escapeValue: false,\n    },\n    ns: [\"translation\"],\n    backend: {\n      loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`,\n      addPath: `${process.env.PUBLIC_URL}/locales/add/{{lng}}/{{ns}}`,\n    },\n    detection: {\n      order: [\"localStorage\"],\n      lookupLocalStorage: \"lng\",\n      checkWhitelist: true,\n    },\n    saveMissing: true,\n    saveMissingTo: \"all\",\n  });\n\nexport default i18n;\n","import \"./index.scss\";\n\nexport default () => {\n  return (\n    <div className=\"lds-ripple\">\n      <div></div>\n      <div></div>\n    </div>\n  );\n};\n","import Loader from \"@components/loader\";\nimport \"@components/site-loader/index.scss\";\nimport { ReactElement, useEffect, useState } from \"react\";\n\nexport default (props: {\n  load: () => Promise<{\n    default: () => ReactElement;\n  }>;\n}) => {\n  const [component, setComponent] = useState(null);\n  const [loaderHidden, setLoaderHidden] = useState(false);\n  useEffect(() => {\n    if (component) setTimeout(() => setLoaderHidden(true), 2000);\n  }, [component]);\n  useEffect(() => {\n    props\n      .load()\n      .then(({ default: _default }) => setComponent(_default() as any));\n  }, []);\n  return (\n    <>\n      {!loaderHidden && (\n        <div className={`site-loader ${component ? \"fade\" : \"\"}`}>\n          <Loader />\n        </div>\n      )}\n      {component}\n    </>\n  );\n};\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { I18nProvider } from \"@core\";\nimport i18n from \"@services/i18n\";\nimport SiteLoader from \"@components/site-loader\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./core\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback=\"loading\">\n      <I18nProvider i18n={i18n}>\n        <SiteLoader load={() => import(\"./App\")} />\n      </I18nProvider>\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export { default as Particles } from \"react-tsparticles\";\n\nexport { default as AnimatedSVG } from \"react-lottie\";\n\nexport {\n  initReactI18next as initI18n,\n  I18nextProvider as I18nProvider,\n} from \"react-i18next\";\n\nexport { default as i18n } from \"i18next\";\n\nexport { default as browserLanguageDetector } from \"i18next-browser-languagedetector\";\n\nexport { default as i18nBackendFetch } from \"i18next-xhr-backend\";\n"],"sourceRoot":""}